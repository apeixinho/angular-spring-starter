FROM node:alpine

RUN addgroup -S app && adduser -S -g app app \
&& apk update && apk upgrade \
&& apk add --no-cache build-base python curl

RUN chown -R app:app /home/app

WORKDIR /home/app

COPY . $WORKDIR

USER app

# RUN npm install
RUN yarn

EXPOSE 4200

CMD ["yarn", "run", "start"]
# CMD ["npm", "start"]
#########################
### build environment ###
#########################

# base image
#FROM node:9.6.1 as builder

#COPY package.json ./

## Storing node modules on a separate layer will prevent unnecessary npm installs at each build
#RUN npm i && mkdir /ng-app && mv ./node_modules ./ng-app
#RUN npm i -g @angular/cli@1.7.1 --unsafe

#WORKDIR /ng-app

#COPY . .

# generate build
#RUN npm run build

# Stage 2, based on Nginx, to have only the compiled app, ready for production with Nginx

#FROM nginx:1.13.9-alpine

#COPY ./nginx-custom.conf /etc/nginx/conf.d/default.conf

## Remove default nginx website
#RUN rm -rf /usr/share/nginx/html/*

## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder
#COPY --from=builder /ng-app/dist /usr/share/nginx/html

# run nginx
#CMD ["nginx", "-g", "daemon off;"]
